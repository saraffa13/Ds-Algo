int rec(int arr[], int st, int ed, vector<vector<int>>&dp){

        if(st+1 == ed)return max(arr[st],arr[ed]);

        if(dp[st][ed]!=-1)return dp[st][ed];
        
        return dp[st][ed] = max(arr[st]+
                    min(rec(arr,st+2,ed,dp),rec(arr,st+1,ed-1,dp)),
                    arr[ed]+
                    min(rec(arr,st,ed-2,dp),rec(arr,st+1,ed-1,dp)));
}



long long maximumAmount(int arr[], int n){
    
    vector<vector<int>>dp(n,vector<int>(n,-1));
    return rec(arr,0,n-1,dp);
}