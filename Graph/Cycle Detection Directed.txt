bool isCyclicUtil(int u, bool visited[], bool *recStack)
    {
        visited[u] = true;
        recStack[u] = true;
        for(auto v:edges[u])
        {
            if (!visited[v]){
                bool x = isCyclicUtil(v, visited, recStack);
                if(x){
                    s.insert(v);
                    return true;
                }
            }
            else if (recStack[v]){
                s.insert(v);
                return true;
            }
        }
        recStack[u] = false; 
        return false;
    }

    int main (){
        bool *visited = new bool[10001];
        bool *recStack = new bool[10001];
        for(int i = 0; i < 10001; i++){
            visited[i] = false;
            recStack[i] = false;
        }
        for(int i=0;i<10001;i++){
            if(!visited[i]){
                bool x = isCyclicUtil(i,visited,recStack);
                if(x)s.insert(i);
            }
        }
    }