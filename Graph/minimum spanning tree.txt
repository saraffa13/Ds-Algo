vi edges[10001];
int par[10001];
int sz[10001];
bool vis[10001];
vi res;

struct T{
  int a;
  int b;
  int w;
};

int findPar(int node){
  if(par[node] == node)return node;
  return par[node] = findPar(par[node]);
}

void Union(int a,int b){
  a=findPar(a);
  b=findPar(b);
  if(a!=b){
    if(sz[a]<sz[b])swap(a,b);
    par[b] = a;
    sz[a]+=sz[b];
  }
}

vector<T> arr;

void solve(){ 
  int n I,m I,sum=0;
  arr.resize(m);
  rep(i,1,n+1)par[i] = i,sz[i] = 1;

  rep(i,0,m){
    arr[i].a I;
    arr[i].b I;
    arr[i].w I;
  }

  sort(all(arr),[&](T &a, T &b)->bool{
    return a.w<b.w;
  });

  rep(i,0, arr.size()){
    int a = findPar(arr[i].a);
    int b = findPar(arr[i].b);
    if(a!=b){
      sum += arr[i].w;
      Union(a,b);
    }
  }
  cout<<sum<<endl;

}