Type 1 : TOPOSORT
vector<int>ind(n);
vector<vector<int>>edges(n);
for(int i=0;i<arr.size();i++){
    edges[arr[i][1]].push_back(arr[i][0]);
    ind[arr[i][0]]++;
}
set<pair<int,int>>indegree;
for(int i =0;i<n;i++){
    indegree.insert({ind[i],i});
}
vector<int>res;
while(!indegree.empty()){
    auto x = *(indegree.begin());
    int c = x.second;
    if(x.first){
        res.clear();
        break;
    }            
    res.push_back(x.second);  
    indegree.erase(x);
    for(int i:edges[c]){
        if(!ind[i])continue;
        indegree.erase({ind[i],i});
        ind[i]--;
        indegree.insert({ind[i],i});                
    }
}
return res;                


======================================================================================================
Type 2 :TOPOSORT
vector<int>ind(n);
vector<vector<int>>edges(n);
for(int i=0;i<arr.size();i++){
    edges[arr[i][1]].push_back(arr[i][0]);
    ind[arr[i][0]]++;
}
queue<int>q;
for(int i=0;i<n;i++){
    if(ind[i]==0)q.push(i);
}
vector<int>res;
while(!q.empty()){
    int x = q.front();
    q.pop();
    res.push_back(x);
    for(int u:edges[x]){
        ind[u]--;
        if(ind[u] ==0)q.push(u);
    }
}
if(res.size() != n)res.clear();
return res;